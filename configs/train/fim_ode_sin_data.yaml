experiment:
  name: zzz_debug_fim_ode_example_onlyDrift_
  name_add_date: true # if true, the current date & time will be added to the experiment name
  seed: [10]
  device_map: cuda # auto, cuda, cpu

distributed:
  enabled: false

model:
  name: FIMODE
  load_in_8bit: false
  load_in_4bit: false
  use_bf16: false

  loss_configs:
    ode_solver: rk4
    loss_scale_drift: 1.0
    loss_scale_init_cond: 0.0
    loss_scale_unsuperv_loss: 0.0

  time_encoding:
    name: fim.models.blocks.TimeEncoding
    dim_time: &dim_time 64

  trunk_net:
    name: fim.models.blocks.Mlp
    in_features: *dim_time
    out_features: &dim_latent 512
    hidden_layers: !!python/tuple [&hidden_dim_mlp 1024, *hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp]
    hidden_act:
      name: torch.nn.SELU
    output_act:
      name: torch.nn.SELU
    dropout: &dropout 0.0
  
  branch_net:
    name: fim.models.blocks.Transformer
    num_encoder_blocks: 4
    dim_model: *dim_latent
    dim_time: *dim_time
    num_heads: 8
    dropout: *dropout
    residual_mlp:
      name: fim.models.blocks.Mlp
      in_features: *dim_latent
      out_features: *dim_latent
      hidden_layers: !!python/tuple [*hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp]
      hidden_act:
        name: torch.nn.SELU 
      output_act:
        name: torch.nn.SELU
      dropout: *dropout
  
  combiner_net:
    name: fim.models.blocks.Mlp
    in_features: 1024  # needs to be the sum of the output dimensions of trunk_net and branch_net => =2* latent_dim
    out_features: *dim_latent
    hidden_layers: !!python/tuple [*hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp]
    hidden_act:
      name: torch.nn.SELU
    output_act:
      name: torch.nn.Identity
    dropout: *dropout

  vector_field_net:
    name: fim.models.blocks.Mlp
    in_features: *dim_latent
    out_features: 2
    hidden_layers: !!python/tuple [*hidden_dim_mlp]
    hidden_act:
      name: torch.nn.SELU
    output_act:
      name: torch.nn.Identity
    dropout: *dropout

  init_cond_net:
    name: fim.models.blocks.Mlp
    in_features: *dim_latent
    out_features: 2
    hidden_layers: !!python/tuple [*hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp, *hidden_dim_mlp]
    hidden_act:
      name: torch.nn.SELU
    output_act:
      name: torch.nn.Identity
    dropout: *dropout


dataset:
  name: base_dataloader
  path: data/2M_ode_chebyshev_max_deg_100_rbf_gp_2_5_and_2_10_length_128_avg_min_8/
  ds_name: ""
  dataset_type_name: "dummy"
  batch_size: 1
  test_batch_size: 1
  output_fields: !!python/tuple ["fine_grid_grid", "coarse_grid_grid", "coarse_grid_sample_paths", "coarse_grid_observation_mask", "fine_grid_concept_values", "fine_grid_sample_paths"]
  loader_kwargs:
    num_workers: 1
  # split: "train"
  # dataset_kwargs:

optimizers: !!python/tuple
  - optimizer_d: # name of the optimizer
      name: torch.optim.AdamW
      lr: 0.0001
      weight_decay: 0.0
      gradient_norm_clipping: 100
      # schedulers: !!python/tuple
      #   - name: torch.optim.lr_scheduler.StepLR
      #     step_size: 1
      #     gamma: 0.8
      #     step_type: epoch

trainer:
  name: Trainer
  debug_iterations: null
  precision: null # null fp16 bf16 bf16_mixed fp16_mixed fp32_policy
  epochs: 100
  detect_anomaly: true
  save_every: 5
  gradient_accumulation_steps: 1
  best_metric: loss
  logging_format: "RANK_%(rank)s - %(asctime)s - %(name)s - %(levelname)s - %(message)s"
  experiment_dir: ./results/
  schedulers:  !!python/tuple
    - name: fim.utils.param_scheduler.PeriodicScheduler # ExponentialIncrease, ConstantScheduler, PeriodicScheduler
      label: beta_scheduler
    - name: fim.utils.param_scheduler.ExponentialSchedulerGumbel
      label: temperature_scheduler
      init_temperature: 1
      min_temperature: 0.5
      training_fraction_to_reach_min: 0.7
